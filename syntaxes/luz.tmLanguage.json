{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Luz",
  "patterns": [
    { "include": "#comments" },
    { "include": "#keywords" },
    { "include": "#types" },
    { "include": "#literals" },
    { "include": "#operators" },
    { "include": "#double-strings" },
    { "include": "#backtick-strings" },
    { "include": "#single-strings" },
    { "include": "#punctuation" },
    { "include": "#functions" },
    { "include": "#variables" }
  ],
  "repository": {
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.definition.template-expression.begin.luz",
          "match": "[{\\[(]"
        },
        {
          "name": "punctuation.definition.template-expression.end.luz",
          "match": "[}\\])]"
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "name": "constant.numeric.luz",
          "match": "(?<![\\w\\$]\\.?)(?:\\d(?:[\\d_]*\\.[\\d_]+(?:[eE][-+]?\\d+)?|\\d*[\\d_]*(?:[eE][-+]?\\d+)?)|(?:\\.[\\d_]+(?:[eE][-+]?\\d+)?))(?:[Xx][Ll])?"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "entity.name.type.luz",
          "match": "\\b(?<=\\bas\\s+)(num|xl|str|vec|arr|bool|set|inf|maybe|null|ran|xran)\\b"
        },
        {
          "name": "entity.name.type.luz",
          "match": "(?<=typeof\\s+)\\b[a-zA-Z_$][a-zA-Z0-9_$]*\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "constant.language.boolean.luz",
          "match": "\\b(true|false|maybe|inf|null)\\b"
        },
        {
          "name": "variable.property.luz",
          "match": "(?<=\\.)(?:\\d|[[\\w\\$]])+"
        },
        {
          "name": "variable.name.luz",
          "match": "[\\w\\$]+"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.luz",
          "match": "[=+\\-<>%\\.\\^\\|/\\*&~!@]|\\?\\?"
        },
        {
          "name": "keyword.operator.assignment.luz",
          "match": ";(?=.*\\])"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.luz",
          "match": "(?<=fn\\s+)[\\w\\$]+\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.luz",
          "match": "\\b(if|else|break|fn|del|as|in|lenof|typeof|copyof|sizeof|firstof|lastof|const|continue|return|loop|has)\\b"
        },
        {
          "name": "support.function.builtin.luz",
          "match": "\\b(get|getln|log|logln|err|errln)\\b"
        }
      ]
    },
    "double-strings": {
      "name": "string.quoted.double.luz",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.luz",
          "match": "\\\\."
        }
      ]
    },
    "single-strings": {
      "name": "string.quoted.single.luz",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.luz",
          "match": "\\\\."
        }
      ]
    },
    "backtick-strings": {
      "name": "string.quoted.other.luz",
      "begin": "`",
      "end": "`",
      "patterns": [
        {
          "name": "constant.character.escape.luz",
          "match": "\\\\."
        },
        {
          "include": "#string-interpolation"
        }
      ]
    },
    "string-interpolation": {
      "name": "string.interpolated.luz",
      "begin": "\\{",
      "end": "\\}",
      "beginCaptures": {
        "0": { "name": "punctuation.section.embedded.begin.luz" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.section.embedded.end.luz" }
      },
      "patterns": [{ "include": "$self" }]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.luz",
          "match": "(//|#).*"
        },
        {
          "name": "comment.block.luz",
          "begin": "/\\*",
          "end": "\\*/",
          "captures": { "0": { "name": "punctuation.definition.comment.luz" } }
        }
      ]
    }
  },
  "scopeName": "source.luz"
}